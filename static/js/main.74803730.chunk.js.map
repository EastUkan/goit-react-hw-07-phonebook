{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Title/Title.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/store.js","redux/phonebook/phonebook-operations.js","redux/phonebook/contacts-selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Title/Title.js","App.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","_","payload","state","filter","id","loading","combineReducers","middleware","getDefaultMiddleware","store","configureStore","reducer","contacts","phonebookReducer","devTools","process","axios","defaults","baseURL","operations","fetchContacts","dispatch","get","then","data","catch","error","addContact","name","number","contact","post","deleteContact","contactId","delete","getAllContacts","getFilter","selectors","getLoading","getVisibleContacts","createSelector","toLowerCase","includes","ContactForm","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onAddContact","className","styles","form","onSubmit","this","input","type","placeholder","onChange","button","Component","connect","phonebookSelectors","phonebookOperations","onDeleteContact","TransitionGroup","component","map","CSSTransition","appear","timeout","classNames","item","itemTitle","onClick","onChangeFilter","Title","title","App","isLoading","in","unmountOnExit","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74803730.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__3ASUO\",\"button\":\"ContactForm_button__3Dtsl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__1ekFG\",\"itemTitle\":\"ContactList_itemTitle__27uKg\",\"enter\":\"ContactList_enter__11ENN\",\"enterActive\":\"ContactList_enterActive__1QRwv\",\"exit\":\"ContactList_exit__1aiTH\",\"exitActive\":\"ContactList_exitActive__1jR0o\",\"button\":\"ContactList_button__9QWMB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2uRCg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__yqJm3\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'phonebook/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'phonebook/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('phonebook/fetchContactsError');\n\nexport const addContactRequest = createAction('phonebook/addContactRequest');\nexport const addContactSuccess = createAction('phonebook/addContactSuccess');\nexport const addContactError = createAction('phonebook/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'phonebook/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'phonebook/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('phonebook/deleteContactError');\n\nexport const changeFilter = createAction('phonebook/changeFilter');\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport {\n  changeFilter,\n  addContactSuccess,\n  deleteContactSuccess,\n  fetchContactsSuccess,\n  addContactRequest,\n  deleteContactRequest,\n  fetchContactsRequest,\n  addContactError,\n  deleteContactError,\n  fetchContactsError,\n} from './phonebook-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import phonebookReducer from './phonebook/phonebook-reducer';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n\nconst middleware = [...getDefaultMiddleware()];\n\nconst store = configureStore({\n  reducer: {\n    contacts: phonebookReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import axios from 'axios';\nimport {\n  addContactSuccess,\n  deleteContactSuccess,\n  fetchContactsSuccess,\n  addContactRequest,\n  deleteContactRequest,\n  fetchContactsRequest,\n  addContactError,\n  deleteContactError,\n  fetchContactsError,\n} from './phonebook-actions';\n\naxios.defaults.baseURL = 'http://localhost:3030';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error)));\n};\n\nconst addContact = (name, number) => dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nconst deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n\nconst operations = { fetchContacts, addContact, deleteContact };\n\nexport default operations;\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = state => state.contacts.loading;\nconst getAllContacts = state => {\n  return state.contacts.items;\n};\nconst getFilter = state => state.contacts.filter;\nconst getVisibleContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  },\n);\n\nconst selectors = { getLoading, getAllContacts, getFilter, getVisibleContacts };\n\nexport default selectors;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\nimport { connect } from 'react-redux';\nimport phonebookSelectors from '../../redux/phonebook/contacts-selectors';\nimport phonebookOperations from '../../redux/phonebook/phonebook-operations';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { name, number } = this.state;\n\n    this.props.onAddContact(name, number);\n\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        Name{' '}\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          value={this.state.name}\n          onChange={this.handleChange}\n        />\n        <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter phone number\"\n          value={this.state.number}\n          onChange={this.handleChange}\n        />\n        <button className={styles.button} type=\"submit\">\n          Add Contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: phonebookSelectors.getAllContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onAddContact: (name, number) =>\n    dispatch(phonebookOperations.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport phonebookOperations from '../../redux/phonebook/phonebook-operations';\nimport phonebookSelectors from '../../redux/phonebook/contacts-selectors';\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <TransitionGroup component=\"ul\">\n      {contacts.map(({ name, number, id }) => {\n        return (\n          <CSSTransition\n            key={id}\n            appear={true}\n            timeout={250}\n            classNames={styles}\n          >\n            <li key=\"id\" className={styles.item}>\n              <div className={styles.itemTitle}>\n                {name}:{number}\n              </div>\n              <button\n                className={styles.button}\n                onClick={() => onDeleteContact(id)}\n              >\n                delete\n              </button>\n            </li>\n          </CSSTransition>\n        );\n      })}\n    </TransitionGroup>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      number: PropTypes.string,\n      id: PropTypes.number,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: phonebookSelectors.getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(phonebookOperations.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions';\nimport phonebookSelectors from '../../redux/phonebook/contacts-selectors';\n\nfunction Filter({ value = '', onChangeFilter }) {\n  return (\n    <input\n      className={styles.input}\n      type=\"text\"\n      name=\"filter\"\n      value={value}\n      onChange={onChangeFilter}\n      placeholder=\"Enter name for Search\"\n    ></input>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: phonebookSelectors.getFilter(state),\n  // items: phonebookSelectors.getAllContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChangeFilter: e => dispatch(changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import styles from './Title.module.css';\nimport PropTypes from 'prop-types';\n\nconst Title = ({ title }) => {\n  return <h2 className={styles.title}>{title}</h2>;\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","import { Component } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport phonebookOperations from './redux/phonebook/phonebook-operations';\nimport phonebookSelectors from './redux/phonebook/contacts-selectors';\nimport ContactForm from './components/ContactForm';\nimport ContactsList from './components/ContactList/ContactList';\nimport Filter from './components/Filter';\nimport Title from './components/Title';\nimport './App.css';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"container\">\n          {this.props.isLoading && <h1>Loading...</h1>}\n          <CSSTransition\n            in={true}\n            appear={true}\n            classNames=\"transition\"\n            timeout={500}\n            unmountOnExit\n          >\n            <Title title=\"Form Contact\" />\n          </CSSTransition>\n\n          <ContactForm />\n          <Title title=\"Contacts List\" />\n\n          <Filter />\n\n          <ContactsList />\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoading: phonebookSelectors.getLoading(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(phonebookOperations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}